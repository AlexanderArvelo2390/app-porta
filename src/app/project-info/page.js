"use client";
import { useSearchParams } from "next/navigation";
import Image from "next/image";
import Link from "next/link";
import ImageCarousel from "../components/ImageCarousel";

const projects = [
  {
    id: "sidom",
    title: "SIDOM",
    description:
      "SIDOM es una plataforma institucional con arquitectura escalable, CMS h√≠brido visual/headless, integraci√≥n de pruebas e2e (Cypress, Jest), dise√±o responsive y autenticaci√≥n privada. Stack: React, Next.js, Vite, Strapi, TailwindCSS.",
    images: ["/assets/sidom.png"],
    details:
      "üß© Secci√≥n ‚ÄúExperiencia‚Äù Desarrollador Fullstack Freelance Proyecto Institucional ‚Äì SIDOM Marzo 2025 - Presente Participaci√≥n activa en el desarrollo del sitio institucional de SIDOM, utilizando tecnolog√≠as como React.js, Next.js, Vite, TailwindCSS y Strapi. Encargado de: Maquetaci√≥n y programaci√≥n de secciones web responsivas desde plantilla base. Integraci√≥n de CMS Headless (Strapi) y visual (Builder.io) para marketing. Consumo de APIs din√°micas para renderizado de contenidos estructurados. Implementaci√≥n de microinteracciones y dise√±o visual adaptado a dispositivos. Configuraci√≥n de pruebas e2e con Cypress y Jest para validaci√≥n funcional. Integraciones externas: Google Tag Manager, Hubspot (opcional), login JWT.üí° Secci√≥n ‚ÄúProyectos‚Äù Sitio Web Institucional SIDOM Proyecto colaborativo con un equipo multidisciplinario orientado al desarrollo escalable de la plataforma institucional de SIDOM. Implementaci√≥n de soluciones tecnol√≥gicas modernas, gesti√≥n de contenidos, dise√±o UI responsivo y performance optimizada. üíª Tecnolog√≠as: React, Next.js, Vite, Strapi, TailwindCSS, Builder.io, Cypress, Jest üìé üîß Secci√≥n ‚ÄúAptitudes‚ÄùReact.js / Next.js / ViteTailwindCSS / CSS ModulesStrapi / Builder.io /Node.js / Express / Cypress / Jest Responsive Design / Animaciones UI / API REST / Integraciones externas Metodolog√≠as √°giles / Trabajo en equipo / Control de versiones (Git, Bitbucket)",
  },
  {
    id: "eventmedia",
    title: "EventMedia ‚Äì App de Dep√≥sito",
    description:
      "App interna en React Native para mejorar el flujo de trabajo en el dep√≥sito t√©cnico de una empresa de espect√°culos. Gesti√≥n de equipos, inventario y log√≠stica operativa.",
    images: ["/assets/merucci.PNG"],
    details:
      "Programador de Iluminaci√≥n & Desarrollador Freelance EventMedia Encargado del dise√±o t√©cnico y creativo de esquemas de iluminaci√≥n para eventos corporativos, espect√°culos, conciertos y obras teatrales. Trabajo colaborativo con equipo de producci√≥n (5 personas) para lograr ambientaciones visuales impactantes adaptadas a cada propuesta art√≠stica. Adem√°s, desarroll√© una aplicaci√≥n interna en React Native para optimizar el flujo de actividades en el dep√≥sito de equipos t√©cnicos, permitiendo una gesti√≥n m√°s eficiente del inventario, entregas y coordinaci√≥n operativa.",
  },
  {
    id: "ecommerce",
    title: "E-commerce personalizado",
    description:
      "Plataforma comercial con integraci√≥n de pasarelas de pago (PayPal), autenticaci√≥n social (Google, Facebook) y paneles administrativos din√°micos con control de inventario y usuarios en tiempo real.",
    images: ["/assets/fit.png"],
    details:
      "Colabor√© con un equipo de seis desarrolladores para dise√±ar y desarrollar una aplicaci√≥n web completa. El proyecto involucr√≥ m√∫ltiples tecnolog√≠as y herramientas para garantizar la seguridad y el correcto funcionamiento de la aplicaci√≥n, incluyendo:  -Trabajo en equipo y colaboraci√≥n -Resoluci√≥n de problemas -Comunicaci√≥n efectiva -Adaptabilidad a nuevos desaf√≠os y tecnolog√≠as -Autonom√≠a y capacidad para trabajar de forma independiente -Front-end: Typescript, Zustand, Tailwind y Next -Back-end: Express, Node.js, JWT y Firebase -Base de datos: PostgreSQL y Sequelize",
  },
];

export default function ProjectInfoPage({ searchParams }) {
  const params =
    typeof window !== "undefined"
      ? new URLSearchParams(window.location.search)
      : null;
  const id = params ? params.get("id") : searchParams?.id;
  const project = projects.find((p) => p.id === id);

  if (!project) {
    return (
      <div className="container py-12 text-center">
        <h2 className="text-2xl font-bold text-gray-800 mb-4">
          Proyecto no encontrado
        </h2>
        <p className="text-gray-500">
          No se encontr√≥ informaci√≥n para este proyecto.
        </p>
      </div>
    );
  }

  return (
    <div className="container py-12">
      <div className="container flex flex-col justify-center items-center py-12">
        <Link
          href="/"
          className="px-4 py-2 bg-emerald-600 text-white rounded hover:bg-emerald-700 transition"
        >
          Ir a Home
        </Link>
      </div>
      <h2 className="text-3xl font-bold text-gray-800 mb-6 text-center">
        {project.title}
      </h2>
      <div className="flex flex-col gap-8 items-center">
        <div className="flex gap-4">
          {project.images.map((img, i) => (
            <Image
              key={i}
              src={img}
              alt={project.title + " screenshot " + (i + 1)}
              width={620}
              height={500}
              className="rounded-lg border object-cover"
            />
          ))}
        </div>
        <div className="flex-1">
          <p className="text-lg text-justify text-gray-700 mb-4">
            {project.details}
          </p>
        </div>
        <div>
          <ImageCarousel images={project.images} />
        </div>
      </div>
    </div>
  );
}
